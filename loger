-- Premium Admin System with User Management - Fixed Version
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")

-- Clear existing GUIs
if playerGui:FindFirstChild("ZonanraSystem") then
    playerGui.ZonanraSystem:Destroy()
end

-- Premium Color Scheme
local COLORS = {
    BACKGROUND = Color3.new(0, 0, 0), -- Fully transparent background
    SURFACE = Color3.fromRGB(18, 18, 25),
    PANEL = Color3.fromRGB(25, 25, 35),
    PRIMARY = Color3.fromRGB(99, 102, 241),
    SUCCESS = Color3.fromRGB(16, 185, 129),
    WARNING = Color3.fromRGB(245, 158, 11),
    DANGER = Color3.fromRGB(239, 68, 68),
    TEXT = Color3.fromRGB(255, 255, 255),
    MUTED = Color3.fromRGB(156, 163, 175),
    ACCENT = Color3.fromRGB(139, 92, 246)
}

-- Device detection
local isMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled

-- User Management System
local connectedUsers = {}
local blacklistedUsers = {}
local userSessions = {}

-- Previous login storage for suggestions
local previousLogins = {}
local rememberedCredentials = {}

-- Accounts storage
local accounts = {
    ["admin"] = {password = "admin123", isAdmin = true},
    ["test"] = {password = "test123", isAdmin = false}
}

-- Feature states for regular users
local userStates = {
    flying = false,
    noclip = false,
    godMode = false,
    speedBoost = false,
    jumpBoost = false,
    aimlock = false
}

-- Utility Functions
local function createGlow(parent, color, size)
    local glow = Instance.new("ImageLabel")
    glow.Name = "Glow"
    glow.Size = UDim2.new(1, size or 20, 1, size or 20)
    glow.Position = UDim2.new(0, -(size or 20)/2, 0, -(size or 20)/2)
    glow.BackgroundTransparency = 1
    glow.Image = "rbxasset://textures/ui/Glow.png"
    glow.ImageColor3 = color or COLORS.PRIMARY
    glow.ImageTransparency = 0.7
    glow.ZIndex = parent.ZIndex - 1
    glow.Parent = parent
    return glow
end

local function createCorner(radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius or 12)
    return corner
end

local function createStroke(color, thickness)
    local stroke = Instance.new("UIStroke")
    stroke.Color = color or COLORS.PRIMARY
    stroke.Thickness = thickness or 1
    stroke.Transparency = 0.5
    return stroke
end

local function makeDraggable(frame, handle)
    local dragging = false
    local dragStart = nil
    local startPos = nil

    handle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
        end
    end)

    handle.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)

    handle.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)
end

local function createButton(text, size, position, color, parent, textSize)
    local button = Instance.new("TextButton")
    button.Text = text
    button.Size = size
    button.Position = position
    button.BackgroundColor3 = color
    button.TextColor3 = COLORS.TEXT
    button.Font = Enum.Font.GothamBold
    button.TextSize = textSize or (isMobile and 14 or 16)
    button.BorderSizePixel = 0
    button.ClipsDescendants = true
    button.Parent = parent

    createCorner(8).Parent = button
    createStroke(color, 1).Parent = button

    -- Gradient effect
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(1, Color3.new(0.8, 0.8, 0.8))
    }
    gradient.Rotation = 90
    gradient.Parent = button

    -- Hover effects
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {Size = size + UDim2.new(0, 4, 0, 2)}):Play()
        createGlow(button, color, 30)
    end)

    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {Size = size}):Play()
        if button:FindFirstChild("Glow") then
            button.Glow:Destroy()
        end
    end)

    return button
end

local function createInput(labelText, size, position, parent, isPassword)
    local container = Instance.new("Frame")
    container.Size = size
    container.Position = position
    container.BackgroundTransparency = 1
    container.Parent = parent

    local label = Instance.new("TextLabel")
    label.Text = labelText
    label.Size = UDim2.new(1, 0, 0, 20)
    label.Position = UDim2.new(0, 0, 0, 0)
    label.BackgroundTransparency = 1
    label.TextColor3 = COLORS.MUTED
    label.Font = Enum.Font.GothamSemibold
    label.TextSize = 12
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = container

    local inputFrame = Instance.new("Frame")
    inputFrame.Size = UDim2.new(1, 0, 1, -25)
    inputFrame.Position = UDim2.new(0, 0, 0, 25)
    inputFrame.BackgroundColor3 = COLORS.SURFACE
    inputFrame.BorderSizePixel = 0
    inputFrame.Parent = container

    createCorner(8).Parent = inputFrame
    createStroke(COLORS.PANEL, 1).Parent = inputFrame

    local input = Instance.new("TextBox")
    input.Size = UDim2.new(1, -20, 1, 0)
    input.Position = UDim2.new(0, 10, 0, 0)
    input.BackgroundTransparency = 1
    input.TextColor3 = COLORS.TEXT
    input.Font = Enum.Font.Gotham
    input.TextSize = 16
    input.PlaceholderText = ""
    input.Text = ""
    input.ClearTextOnFocus = false
    input.Parent = inputFrame

    -- Focus effects
    input.Focused:Connect(function()
        TweenService:Create(inputFrame:FindFirstChild("UIStroke"), TweenInfo.new(0.2), {Color = COLORS.PRIMARY, Thickness = 2}):Play()
        createGlow(inputFrame, COLORS.PRIMARY, 20)
    end)

    input.FocusLost:Connect(function()
        TweenService:Create(inputFrame:FindFirstChild("UIStroke"), TweenInfo.new(0.2), {Color = COLORS.PANEL, Thickness = 1}):Play()
        if inputFrame:FindFirstChild("Glow") then
            inputFrame.Glow:Destroy()
        end
    end)

    if isPassword then
        local realPassword = ""
        local function updatePassword()
            if #input.Text > #realPassword then
                realPassword = realPassword .. string.sub(input.Text, #realPassword + 1)
            elseif #input.Text < #realPassword then
                realPassword = string.sub(realPassword, 1, #input.Text)
            end
            input.Text = string.rep("●", #realPassword)
        end

        input.FocusLost:Connect(updatePassword)
        input:GetPropertyChangedSignal("Text"):Connect(function()
            if #input.Text < #realPassword then
                updatePassword()
            end
        end)

        return input, function() return realPassword end
    end

    return input
end

local function showNotification(message, type, duration)
    local notification = Instance.new("Frame")
    notification.Size = UDim2.new(0, 350, 0, 80)
    notification.Position = UDim2.new(1, -370, 0, 20)
    notification.BackgroundColor3 = type == "success" and COLORS.SUCCESS or type == "error" and COLORS.DANGER or COLORS.PRIMARY
    notification.BorderSizePixel = 0
    notification.Parent = playerGui

    createCorner(12).Parent = notification
    createGlow(notification, notification.BackgroundColor3, 25)

    local icon = Instance.new("TextLabel")
    icon.Text = type == "success" and "✓" or type == "error" and "✗" or "ℹ"
    icon.Size = UDim2.new(0, 50, 1, 0)
    icon.BackgroundTransparency = 1
    icon.TextColor3 = COLORS.TEXT
    icon.Font = Enum.Font.GothamBold
    icon.TextSize = 24
    icon.Parent = notification

    local text = Instance.new("TextLabel")
    text.Text = message
    text.Size = UDim2.new(1, -60, 1, 0)
    text.Position = UDim2.new(0, 50, 0, 0)
    text.BackgroundTransparency = 1
    text.TextColor3 = COLORS.TEXT
    text.Font = Enum.Font.GothamSemibold
    text.TextSize = 14
    text.TextWrapped = true
    text.TextXAlignment = Enum.TextXAlignment.Left
    text.Parent = notification

    -- Animate in
    notification.Position = UDim2.new(1, 0, 0, 20)
    TweenService:Create(notification, TweenInfo.new(0.5, Enum.EasingStyle.Back), {Position = UDim2.new(1, -370, 0, 20)}):Play()

    -- Auto remove
    task.delay(duration or 3, function()
        TweenService:Create(notification, TweenInfo.new(0.3), {Position = UDim2.new(1, 0, 0, 20)}):Play()
        task.delay(0.3, function()
            notification:Destroy()
        end)
    end)
end

-- Enhanced kick function for script users only
local function kickScriptUser(userId, reason)
    local userData = connectedUsers[userId]
    if userData then
        -- First try to kick from game if they're still connected
        local targetPlayer = Players:GetPlayerByUserId(tonumber(userId))
        if targetPlayer then
            targetPlayer:Kick(reason or "You have been kicked by an administrator for script misuse")
        end
        -- Remove from script system
        connectedUsers[userId] = nil
        return true, userData.name
    end
    return false, "User not found in script system"
end

-- Function to save login for suggestions
local function saveLoginSuggestion(username, password)
    previousLogins[player.UserId] = {
        username = username,
        timestamp = tick()
    }
    -- Also save credentials for quick login (in real implementation, this should be encrypted)
    rememberedCredentials[player.UserId] = {
        username = username,
        password = password,
        timestamp = tick()
    }
end

-- Function to get login suggestions
local function getLoginSuggestion()
    local suggestion = previousLogins[player.UserId]
    if suggestion and (tick() - suggestion.timestamp) < 86400 then -- 24 hours
        return suggestion.username
    end
    return nil
end

-- ===== MAIN GUI CONTAINER =====
local mainGui = Instance.new("ScreenGui")
mainGui.Name = "ZonanraSystem"
mainGui.ResetOnSpawn = false
mainGui.Parent = playerGui

-- ===== PREMIUM LOGIN INTERFACE =====
local loginContainer = Instance.new("Frame")
loginContainer.Size = UDim2.new(1, 0, 1, 0)
loginContainer.BackgroundTransparency = 1 -- Made transparent to remove black screen
loginContainer.BorderSizePixel = 0
loginContainer.Visible = true
loginContainer.Parent = mainGui

-- Login card
local loginCard = Instance.new("Frame")
loginCard.Size = isMobile and UDim2.new(0.9, 0, 0, 600) or UDim2.new(0, 450, 0, 600)
loginCard.Position = UDim2.new(0.5, 0, 0.5, 0)
loginCard.AnchorPoint = Vector2.new(0.5, 0.5)
loginCard.BackgroundColor3 = COLORS.SURFACE
loginCard.BorderSizePixel = 0
loginCard.Parent = loginContainer

createCorner(24).Parent = loginCard
createStroke(COLORS.PANEL, 2).Parent = loginCard
createGlow(loginCard, COLORS.PRIMARY, 50)

-- Logo section
local logoSection = Instance.new("Frame")
logoSection.Size = UDim2.new(1, 0, 0, 120)
logoSection.BackgroundColor3 = COLORS.PRIMARY
logoSection.BorderSizePixel = 0
logoSection.Parent = loginCard

createCorner(24).Parent = logoSection

local logoFix = Instance.new("Frame")
logoFix.Size = UDim2.new(1, 0, 0, 24)
logoFix.Position = UDim2.new(0, 0, 1, -24)
logoFix.BackgroundColor3 = COLORS.PRIMARY
logoFix.BorderSizePixel = 0
logoFix.Parent = logoSection

local logoGradient = Instance.new("UIGradient")
logoGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, COLORS.PRIMARY),
    ColorSequenceKeypoint.new(1, COLORS.ACCENT)
}
logoGradient.Rotation = 45
logoGradient.Parent = logoSection

local logo = Instance.new("TextLabel")
logo.Text = "ZONANRA"
logo.Size = UDim2.new(1, 0, 0, 60)
logo.Position = UDim2.new(0, 0, 0, 20)
logo.BackgroundTransparency = 1
logo.TextColor3 = COLORS.TEXT
logo.Font = Enum.Font.GothamBlack
logo.TextSize = isMobile and 32 or 42
logo.Parent = logoSection

local subtitle = Instance.new("TextLabel")
subtitle.Text = "Premium Game Enhancement Suite"
subtitle.Size = UDim2.new(1, 0, 0, 30)
subtitle.Position = UDim2.new(0, 0, 0, 75)
subtitle.BackgroundTransparency = 1
subtitle.TextColor3 = Color3.fromRGB(200, 220, 255)
subtitle.Font = Enum.Font.GothamSemibold
subtitle.TextSize = 14
subtitle.Parent = logoSection

-- Login suggestion section
local suggestionSection = Instance.new("Frame")
suggestionSection.Size = UDim2.new(1, -60, 0, 80)
suggestionSection.Position = UDim2.new(0, 30, 0, 140)
suggestionSection.BackgroundColor3 = COLORS.PANEL
suggestionSection.BorderSizePixel = 0
suggestionSection.Visible = false
suggestionSection.Parent = loginCard

createCorner(12).Parent = suggestionSection

local suggestionTitle = Instance.new("TextLabel")
suggestionTitle.Text = "Welcome back!"
suggestionTitle.Size = UDim2.new(1, 0, 0, 25)
suggestionTitle.Position = UDim2.new(0, 15, 0, 5)
suggestionTitle.BackgroundTransparency = 1
suggestionTitle.TextColor3 = COLORS.TEXT
suggestionTitle.Font = Enum.Font.GothamBold
suggestionTitle.TextSize = 14
suggestionTitle.TextXAlignment = Enum.TextXAlignment.Left
suggestionTitle.Parent = suggestionSection

local suggestionText = Instance.new("TextLabel")
suggestionText.Text = "Continue with previous account or create new?"
suggestionText.Size = UDim2.new(1, 0, 0, 20)
suggestionText.Position = UDim2.new(0, 15, 0, 25)
suggestionText.BackgroundTransparency = 1
suggestionText.TextColor3 = COLORS.MUTED
suggestionText.Font = Enum.Font.Gotham
suggestionText.TextSize = 12
suggestionText.TextXAlignment = Enum.TextXAlignment.Left
suggestionText.Parent = suggestionSection

local continueBtn = createButton("CONTINUE", UDim2.new(0, 100, 0, 25), UDim2.new(0, 15, 0, 50), COLORS.SUCCESS, suggestionSection, 12)
local newAccountBtn = createButton("NEW ACCOUNT", UDim2.new(0, 120, 0, 25), UDim2.new(0, 125, 0, 50), COLORS.WARNING, suggestionSection, 12)

-- Tab system
local tabContainer = Instance.new("Frame")
tabContainer.Size = UDim2.new(1, -60, 0, 50)
tabContainer.Position = UDim2.new(0, 30, 0, 240)
tabContainer.BackgroundColor3 = COLORS.PANEL
tabContainer.BorderSizePixel = 0
tabContainer.Parent = loginCard

createCorner(12).Parent = tabContainer

local loginTab = createButton("LOGIN", UDim2.new(0.5, -2, 1, -6), UDim2.new(0, 3, 0, 3), COLORS.PRIMARY, tabContainer)
local signupTab = createButton("REGISTER", UDim2.new(0.5, -2, 1, -6), UDim2.new(0.5, 1, 0, 3), COLORS.PANEL, tabContainer)

-- Login form
local loginForm = Instance.new("Frame")
loginForm.Size = UDim2.new(1, -60, 1, -320)
loginForm.Position = UDim2.new(0, 30, 0, 310)
loginForm.BackgroundTransparency = 1
loginForm.Visible = true
loginForm.Parent = loginCard

local usernameInput = createInput("Username", UDim2.new(1, 0, 0, 70), UDim2.new(0, 0, 0, 0), loginForm)
local passwordInput, getPassword = createInput("Password", UDim2.new(1, 0, 0, 70), UDim2.new(0, 0, 0, 90), loginForm, true)

local loginBtn = createButton("LOGIN TO ZONANRA", UDim2.new(1, 0, 0, 50), UDim2.new(0, 0, 0, 180), COLORS.PRIMARY, loginForm, 18)

-- Register form
local registerForm = Instance.new("Frame")
registerForm.Size = UDim2.new(1, -60, 1, -320)
registerForm.Position = UDim2.new(0, 30, 0, 310)
registerForm.BackgroundTransparency = 1
registerForm.Visible = false
registerForm.Parent = loginCard

local newUsernameInput = createInput("Username", UDim2.new(1, 0, 0, 70), UDim2.new(0, 0, 0, 0), registerForm)
local newPasswordInput, getNewPassword = createInput("Password", UDim2.new(1, 0, 0, 70), UDim2.new(0, 0, 0, 80), registerForm, true)
local confirmPasswordInput, getConfirmPassword = createInput("Confirm Password", UDim2.new(1, 0, 0, 70), UDim2.new(0, 0, 0, 160), registerForm, true)

local registerBtn = createButton("CREATE ACCOUNT", UDim2.new(1, 0, 0, 50), UDim2.new(0, 0, 0, 240), COLORS.SUCCESS, registerForm, 18)

-- Check for login suggestions on startup
local suggestedUsername = getLoginSuggestion()
if suggestedUsername then
    suggestionSection.Visible = true
    suggestionText.Text = "Continue as " .. suggestedUsername .. " or create new account?"
    tabContainer.Position = UDim2.new(0, 30, 0, 240)
    loginForm.Position = UDim2.new(0, 30, 0, 310)
    registerForm.Position = UDim2.new(0, 30, 0, 310)
else
    tabContainer.Position = UDim2.new(0, 30, 0, 140)
    loginForm.Position = UDim2.new(0, 30, 0, 210)
    registerForm.Position = UDim2.new(0, 30, 0, 210)
end

-- ===== UNIFIED DASHBOARD FOR ALL USERS =====
local userDashboard = Instance.new("Frame")
userDashboard.Size = UDim2.new(1, 0, 1, 0)
userDashboard.BackgroundTransparency = 1 -- Made transparent
userDashboard.BorderSizePixel = 0
userDashboard.Visible = false
userDashboard.Parent = mainGui

local dashboardFrame = Instance.new("Frame")
dashboardFrame.Size = isMobile and UDim2.new(0.95, 0, 0.9, 0) or UDim2.new(0, 1000, 0, 700)
dashboardFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
dashboardFrame.AnchorPoint = Vector2.new(0.5, 0.5)
dashboardFrame.BackgroundColor3 = COLORS.SURFACE
dashboardFrame.BorderSizePixel = 0
dashboardFrame.Parent = userDashboard

createCorner(20).Parent = dashboardFrame
createStroke(COLORS.PANEL, 2).Parent = dashboardFrame

-- Dashboard header
local dashHeader = Instance.new("Frame")
dashHeader.Size = UDim2.new(1, 0, 0, 80)
dashHeader.BackgroundColor3 = COLORS.PANEL
dashHeader.BorderSizePixel = 0
dashHeader.Parent = dashboardFrame

createCorner(20).Parent = dashHeader

local dashHeaderFix = Instance.new("Frame")
dashHeaderFix.Size = UDim2.new(1, 0, 0, 20)
dashHeaderFix.Position = UDim2.new(0, 0, 1, -20)
dashHeaderFix.BackgroundColor3 = COLORS.PANEL
dashHeaderFix.BorderSizePixel = 0
dashHeaderFix.Parent = dashHeader

makeDraggable(dashboardFrame, dashHeader)

local dashTitle = Instance.new("TextLabel")
dashTitle.Text = "ZONANRA DASHBOARD"
dashTitle.Size = UDim2.new(0.6, 0, 1, 0)
dashTitle.Position = UDim2.new(0, 20, 0, 0)
dashTitle.BackgroundTransparency = 1
dashTitle.TextColor3 = COLORS.TEXT
dashTitle.Font = Enum.Font.GothamBlack
dashTitle.TextSize = isMobile and 18 or 22
dashTitle.TextXAlignment = Enum.TextXAlignment.Left
dashTitle.Parent = dashHeader

local userInfo = Instance.new("Frame")
userInfo.Size = UDim2.new(0, 200, 0, 50)
userInfo.Position = UDim2.new(1, -220, 0, 15)
userInfo.BackgroundColor3 = COLORS.BACKGROUND
userInfo.BorderSizePixel = 0
userInfo.Parent = dashHeader

createCorner(12).Parent = userInfo

local userAvatar = Instance.new("ImageLabel")
userAvatar.Size = UDim2.new(0, 40, 0, 40)
userAvatar.Position = UDim2.new(0, 5, 0, 5)
userAvatar.Image = "https://www.roblox.com/headshot-thumbnail/image?userId="..player.UserId.."&width=150&height=150&format=png"
userAvatar.BackgroundTransparency = 1
userAvatar.Parent = userInfo

createCorner(8).Parent = userAvatar

local userName = Instance.new("TextLabel")
userName.Text = player.Name
userName.Size = UDim2.new(0, 100, 0, 40)
userName.Position = UDim2.new(0, 50, 0, 5)
userName.BackgroundTransparency = 1
userName.TextColor3 = COLORS.TEXT
userName.Font = Enum.Font.GothamSemibold
userName.TextSize = 14
userName.TextXAlignment = Enum.TextXAlignment.Left
userName.Parent = userInfo

local logoutBtn = createButton("LOGOUT", UDim2.new(0, 70, 0, 30), UDim2.new(1, -75, 0, 10), COLORS.DANGER, userInfo, 12)

-- Main dashboard container with sidebar for ALL USERS
local dashMainContainer = Instance.new("Frame")
dashMainContainer.Size = UDim2.new(1, -40, 1, -120)
dashMainContainer.Position = UDim2.new(0, 20, 0, 100)
dashMainContainer.BackgroundTransparency = 1
dashMainContainer.Parent = dashboardFrame

-- Sidebar navigation for ALL USERS
local dashSidebar = Instance.new("Frame")
dashSidebar.Size = UDim2.new(0, 200, 1, 0)
dashSidebar.Position = UDim2.new(0, 0, 0, 0)
dashSidebar.BackgroundColor3 = COLORS.PANEL
dashSidebar.BorderSizePixel = 0
dashSidebar.Parent = dashMainContainer

createCorner(16).Parent = dashSidebar

local sidebarTitle = Instance.new("TextLabel")
sidebarTitle.Text = "NAVIGATION"
sidebarTitle.Size = UDim2.new(1, -20, 0, 40)
sidebarTitle.Position = UDim2.new(0, 10, 0, 10)
sidebarTitle.BackgroundTransparency = 1
sidebarTitle.TextColor3 = COLORS.MUTED
sidebarTitle.Font = Enum.Font.GothamBold
sidebarTitle.TextSize = 12
sidebarTitle.TextXAlignment = Enum.TextXAlignment.Left
sidebarTitle.Parent = dashSidebar

-- Tab buttons (will be different for admin vs regular users)
local generalTabBtn = createButton("📋 General", UDim2.new(1, -20, 0, 45), UDim2.new(0, 10, 0, 60), COLORS.PRIMARY, dashSidebar, 14)
local secondTabBtn = createButton("👑 Owners", UDim2.new(1, -20, 0, 45), UDim2.new(0, 10, 0, 115), COLORS.BACKGROUND, dashSidebar, 14)

-- Content area
local dashContent = Instance.new("Frame")
dashContent.Size = UDim2.new(1, -220, 1, 0)
dashContent.Position = UDim2.new(0, 220, 0, 0)
dashContent.BackgroundTransparency = 1
dashContent.Parent = dashMainContainer

-- General tab content (user features)
local generalContent = Instance.new("Frame")
generalContent.Size = UDim2.new(1, 0, 1, 0)
generalContent.BackgroundTransparency = 1
generalContent.Visible = true
generalContent.Parent = dashContent

local generalTitle = Instance.new("TextLabel")
generalTitle.Text = "General Features"
generalTitle.Size = UDim2.new(1, 0, 0, 50)
generalTitle.BackgroundTransparency = 1
generalTitle.TextColor3 = COLORS.TEXT
generalTitle.Font = Enum.Font.GothamBlack
generalTitle.TextSize = 24
generalTitle.Parent = generalContent

-- Feature grid for general content
local generalGrid = Instance.new("ScrollingFrame")
generalGrid.Size = UDim2.new(1, 0, 1, -60)
generalGrid.Position = UDim2.new(0, 0, 0, 60)
generalGrid.BackgroundTransparency = 1
generalGrid.ScrollBarThickness = 8
generalGrid.ScrollBarImageColor3 = COLORS.PRIMARY
generalGrid.CanvasSize = UDim2.new(0, 0, 0, 800)
generalGrid.Parent = generalContent

-- Second tab content (Owners for regular users, Script Control for admins)
local secondContent = Instance.new("Frame")
secondContent.Size = UDim2.new(1, 0, 1, 0)
secondContent.BackgroundTransparency = 1
secondContent.Visible = false
secondContent.Parent = dashContent

-- Will be populated based on user type
local secondTitle = Instance.new("TextLabel")
secondTitle.Text = "Owners"
secondTitle.Size = UDim2.new(1, 0, 0, 50)
secondTitle.BackgroundTransparency = 1
secondTitle.TextColor3 = COLORS.TEXT
secondTitle.Font = Enum.Font.GothamBlack
secondTitle.TextSize = 24
secondTitle.Parent = secondContent

local secondSection = Instance.new("Frame")
secondSection.Size = UDim2.new(1, 0, 1, -70)
secondSection.Position = UDim2.new(0, 0, 0, 60)
secondSection.BackgroundColor3 = COLORS.PANEL
secondSection.BorderSizePixel = 0
secondSection.Parent = secondContent

createCorner(16).Parent = secondSection

-- Features for regular users
local userFeatures = {
    {name = "Aimlock", desc = "Advanced targeting system", icon = "🎯", func = function()
        userStates.aimlock = not userStates.aimlock
        if userStates.aimlock then
            loadstring(game:HttpGet("https://raw.githubusercontent.com/new-gugus/aimbot-neptune/refs/heads/main/aimbot.lua", true))()
            showNotification("Aimlock activated", "success")
            -- Update user status for admin monitoring
            if connectedUsers[tostring(player.UserId)] then
                connectedUsers[tostring(player.UserId)].status = "Using Aimlock"
            end
        else
            showNotification("Aimlock deactivated", "info")
            if connectedUsers[tostring(player.UserId)] then
                connectedUsers[tostring(player.UserId)].status = "Online"
            end
        end
    end},
    {name = "God Mode", desc = "Infinite health protection", icon = "🛡️", func = function()
        userStates.godMode = not userStates.godMode
        local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            if userStates.godMode then
                humanoid.MaxHealth = math.huge
                humanoid.Health = math.huge
                showNotification("God Mode enabled", "success")
                if connectedUsers[tostring(player.UserId)] then
                    connectedUsers[tostring(player.UserId)].status = "Using God Mode"
                end
            else
                humanoid.MaxHealth = 100
                humanoid.Health = 100
                showNotification("God Mode disabled", "info")
                if connectedUsers[tostring(player.UserId)] then
                    connectedUsers[tostring(player.UserId)].status = "Online"
                end
            end
        end
    end},
    {name = "Fly Mode", desc = "WASD flying controls", icon = "🚀", func = function()
        userStates.flying = not userStates.flying
        local character = player.Character
        if not character then return end

        if userStates.flying then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            local rootPart = character:FindFirstChild("HumanoidRootPart")
            if humanoid and rootPart then
                local bodyVelocity = Instance.new("BodyVelocity")
                bodyVelocity.Velocity = Vector3.new(0, 0, 0)
                bodyVelocity.MaxForce = Vector3.new(4000, 4000, 4000)
                bodyVelocity.Parent = rootPart

                local speed = 50
                local connection
                connection = RunService.Heartbeat:Connect(function()
                    if not userStates.flying then
                        connection:Disconnect()
                        if bodyVelocity then bodyVelocity:Destroy() end
                        return
                    end

                    local cam = workspace.CurrentCamera
                    local moveDirection = Vector3.new(0, 0, 0)

                    if UserInputService:IsKeyDown(Enum.KeyCode.W) then
                        moveDirection = moveDirection + cam.CFrame.LookVector
                    end
                    if UserInputService:IsKeyDown(Enum.KeyCode.S) then
                        moveDirection = moveDirection - cam.CFrame.LookVector
                    end
                    if UserInputService:IsKeyDown(Enum.KeyCode.A) then
                        moveDirection = moveDirection - cam.CFrame.RightVector
                    end
                    if UserInputService:IsKeyDown(Enum.KeyCode.D) then
                        moveDirection = moveDirection + cam.CFrame.RightVector
                    end
                    if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
                        moveDirection = moveDirection + Vector3.new(0, 1, 0)
                    end
                    if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then
                        moveDirection = moveDirection - Vector3.new(0, 1, 0)
                    end

                    if bodyVelocity then
                        bodyVelocity.Velocity = moveDirection * speed
                    end
                end)
                showNotification("Fly Mode enabled - Use WASD + Space/Shift", "success")
                if connectedUsers[tostring(player.UserId)] then
                    connectedUsers[tostring(player.UserId)].status = "Using Fly Mode"
                end
            end
        else
            local rootPart = character:FindFirstChild("HumanoidRootPart")
            if rootPart then
                for _, obj in pairs(rootPart:GetChildren()) do
                    if obj:IsA("BodyVelocity") then
                        obj:Destroy()
                    end
                end
            end
            showNotification("Fly Mode disabled", "info")
            if connectedUsers[tostring(player.UserId)] then
                connectedUsers[tostring(player.UserId)].status = "Online"
            end
        end
    end},
    {name = "Noclip", desc = "Walk through walls", icon = "👻", func = function()
        userStates.noclip = not userStates.noclip
        local character = player.Character
        if not character then return end

        if userStates.noclip then
            local connection
            connection = RunService.Stepped:Connect(function()
                if not userStates.noclip then
                    connection:Disconnect()
                    return
                end
                for _, part in pairs(character:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = false
                    end
                end
            end)
            showNotification("Noclip enabled", "success")
            if connectedUsers[tostring(player.UserId)] then
                connectedUsers[tostring(player.UserId)].status = "Using Noclip"
            end
        else
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                    part.CanCollide = true
                end
            end
            showNotification("Noclip disabled", "info")
            if connectedUsers[tostring(player.UserId)] then
                connectedUsers[tostring(player.UserId)].status = "Online"
            end
        end
    end},
    {name = "Speed Boost", desc = "Enhanced movement speed", icon = "💨", func = function()
        userStates.speedBoost = not userStates.speedBoost
        local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            if userStates.speedBoost then
                humanoid.WalkSpeed = 100
                showNotification("Speed Boost enabled", "success")
                if connectedUsers[tostring(player.UserId)] then
                    connectedUsers[tostring(player.UserId)].status = "Using Speed Boost"
                end
            else
                humanoid.WalkSpeed = 16
                showNotification("Speed Boost disabled", "info")
                if connectedUsers[tostring(player.UserId)] then
                    connectedUsers[tostring(player.UserId)].status = "Online"
                end
            end
        end
    end},
    {name = "Jump Boost", desc = "Enhanced jump power", icon = "⬆️", func = function()
        userStates.jumpBoost = not userStates.jumpBoost
        local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            if userStates.jumpBoost then
                humanoid.JumpPower = 150
                showNotification("Jump Boost enabled", "success")
                if connectedUsers[tostring(player.UserId)] then
                    connectedUsers[tostring(player.UserId)].status = "Using Jump Boost"
                end
            else
                humanoid.JumpPower = 50
                showNotification("Jump Boost disabled", "info")
                if connectedUsers[tostring(player.UserId)] then
                    connectedUsers[tostring(player.UserId)].status = "Online"
                end
            end
        end
    end}
}

-- Create feature cards in general tab
local currentY = 20
for i, feature in pairs(userFeatures) do
    local card = Instance.new("Frame")
    card.Size = UDim2.new(1, -20, 0, 100)
    card.Position = UDim2.new(0, 10, 0, currentY)
    card.BackgroundColor3 = COLORS.PANEL
    card.BorderSizePixel = 0
    card.Parent = generalGrid

    createCorner(16).Parent = card
    createStroke(COLORS.BACKGROUND, 1).Parent = card

    local icon = Instance.new("TextLabel")
    icon.Text = feature.icon
    icon.Size = UDim2.new(0, 60, 0, 60)
    icon.Position = UDim2.new(0, 20, 0, 20)
    icon.BackgroundColor3 = COLORS.BACKGROUND
    icon.TextColor3 = COLORS.TEXT
    icon.Font = Enum.Font.GothamBold
    icon.TextSize = 28
    icon.BorderSizePixel = 0
    icon.Parent = card

    createCorner(12).Parent = icon

    local nameLabel = Instance.new("TextLabel")
    nameLabel.Text = feature.name
    nameLabel.Size = UDim2.new(0, 200, 0, 30)
    nameLabel.Position = UDim2.new(0, 100, 0, 15)
    nameLabel.BackgroundTransparency = 1
    nameLabel.TextColor3 = COLORS.TEXT
    nameLabel.Font = Enum.Font.GothamBold
    nameLabel.TextSize = 18
    nameLabel.TextXAlignment = Enum.TextXAlignment.Left
    nameLabel.Parent = card

    local descLabel = Instance.new("TextLabel")
    descLabel.Text = feature.desc
    descLabel.Size = UDim2.new(0, 200, 0, 25)
    descLabel.Position = UDim2.new(0, 100, 0, 45)
    descLabel.BackgroundTransparency = 1
    descLabel.TextColor3 = COLORS.MUTED
    descLabel.Font = Enum.Font.Gotham
    descLabel.TextSize = 14
    descLabel.TextXAlignment = Enum.TextXAlignment.Left
    descLabel.Parent = card

    local toggleBtn = createButton("TOGGLE", UDim2.new(0, 100, 0, 40), UDim2.new(1, -120, 0, 30), COLORS.PRIMARY, card, 14)
    toggleBtn.MouseButton1Click:Connect(feature.func)

    currentY = currentY + 120
end

-- Variables to store user type and update UI accordingly
local currentUserIsAdmin = false

-- Function to setup second tab based on user type
local function setupSecondTab(isAdmin)
    currentUserIsAdmin = isAdmin
    
    if isAdmin then
        -- Admin gets Script Control
        secondTabBtn.Text = "⚡ Script Control"
        secondTitle.Text = "Script User Management"
        secondTitle.TextColor3 = COLORS.DANGER
        
        -- Clear existing content
        for _, child in pairs(secondSection:GetChildren()) do
            if not child:IsA("UICorner") then
                child:Destroy()
            end
        end
        
        local adminTitle = Instance.new("TextLabel")
        adminTitle.Text = "🔨 Script User Moderation - Kick/Ban Script Abusers"
        adminTitle.Size = UDim2.new(1, 0, 0, 30)
        adminTitle.Position = UDim2.new(0, 20, 0, 10)
        adminTitle.BackgroundTransparency = 1
        adminTitle.TextColor3 = COLORS.TEXT
        adminTitle.Font = Enum.Font.GothamBold
        adminTitle.TextSize = 16
        adminTitle.TextXAlignment = Enum.TextXAlignment.Left
        adminTitle.Parent = secondSection

        local adminSubtitle = Instance.new("TextLabel")
        adminSubtitle.Text = "Only users connected to the script system are shown. Kick/ban those misusing features."
        adminSubtitle.Size = UDim2.new(1, 0, 0, 20)
        adminSubtitle.Position = UDim2.new(0, 20, 0, 35)
        adminSubtitle.BackgroundTransparency = 1
        adminSubtitle.TextColor3 = COLORS.MUTED
        adminSubtitle.Font = Enum.Font.Gotham
        adminSubtitle.TextSize = 12
        adminSubtitle.TextXAlignment = Enum.TextXAlignment.Left
        adminSubtitle.Parent = secondSection

        local usersList = Instance.new("ScrollingFrame")
        usersList.Name = "UsersList"
        usersList.Size = UDim2.new(1, -40, 1, -80)
        usersList.Position = UDim2.new(0, 20, 0, 65)
        usersList.BackgroundTransparency = 1
        usersList.ScrollBarThickness = 6
        usersList.ScrollBarImageColor3 = COLORS.DANGER
        usersList.CanvasSize = UDim2.new(0, 0, 0, 200)
        usersList.Parent = secondSection
        
    else
        -- Regular user gets Owners
        secondTabBtn.Text = "👑 Owners"
        secondTitle.Text = "Owners"
        secondTitle.TextColor3 = COLORS.ACCENT
        
        -- Clear existing content
        for _, child in pairs(secondSection:GetChildren()) do
            if not child:IsA("UICorner") then
                child:Destroy()
            end
        end
        
        local ownersTitle = Instance.new("TextLabel")
        ownersTitle.Text = "👑 Script Owners"
        ownersTitle.Size = UDim2.new(1, 0, 0, 30)
        ownersTitle.Position = UDim2.new(0, 20, 0, 10)
        ownersTitle.BackgroundTransparency = 1
        ownersTitle.TextColor3 = COLORS.TEXT
        ownersTitle.Font = Enum.Font.GothamBold
        ownersTitle.TextSize = 16
        ownersTitle.TextXAlignment = Enum.TextXAlignment.Left
        ownersTitle.Parent = secondSection

        local ownersSubtitle = Instance.new("TextLabel")
        ownersSubtitle.Text = "Meet the creators and owners of this premium script system."
        ownersSubtitle.Size = UDim2.new(1, 0, 0, 20)
        ownersSubtitle.Position = UDim2.new(0, 20, 0, 35)
        ownersSubtitle.BackgroundTransparency = 1
        ownersSubtitle.TextColor3 = COLORS.MUTED
        ownersSubtitle.Font = Enum.Font.Gotham
        ownersSubtitle.TextSize = 12
        ownersSubtitle.TextXAlignment = Enum.TextXAlignment.Left
        ownersSubtitle.Parent = secondSection

        -- Noarkan owner card
        local ownerCard = Instance.new("Frame")
        ownerCard.Size = UDim2.new(1, -40, 0, 120)
        ownerCard.Position = UDim2.new(0, 20, 0, 70)
        ownerCard.BackgroundColor3 = COLORS.BACKGROUND
        ownerCard.BorderSizePixel = 0
        ownerCard.Parent = secondSection

        createCorner(16).Parent = ownerCard
        createStroke(COLORS.ACCENT, 2).Parent = ownerCard

        local ownerAvatar = Instance.new("ImageLabel")
        ownerAvatar.Size = UDim2.new(0, 80, 0, 80)
        ownerAvatar.Position = UDim2.new(0, 20, 0, 20)
        ownerAvatar.Image = "https://www.roblox.com/headshot-thumbnail/image?userId=1665348838&width=150&height=150&format=png"
        ownerAvatar.BackgroundTransparency = 1
        ownerAvatar.Parent = ownerCard

        createCorner(12).Parent = ownerAvatar
        createGlow(ownerAvatar, COLORS.ACCENT, 20)

        local ownerName = Instance.new("TextLabel")
        ownerName.Text = "Owner Noarkan"
        ownerName.Size = UDim2.new(0, 300, 0, 35)
        ownerName.Position = UDim2.new(0, 120, 0, 20)
        ownerName.BackgroundTransparency = 1
        ownerName.TextColor3 = COLORS.TEXT
        ownerName.Font = Enum.Font.GothamBlack
        ownerName.TextSize = 20
        ownerName.TextXAlignment = Enum.TextXAlignment.Left
        ownerName.Parent = ownerCard

        local ownerRole = Instance.new("TextLabel")
        ownerRole.Text = "Script Creator & Main Developer"
        ownerRole.Size = UDim2.new(0, 300, 0, 25)
        ownerRole.Position = UDim2.new(0, 120, 0, 50)
        ownerRole.BackgroundTransparency = 1
        ownerRole.TextColor3 = COLORS.ACCENT
        ownerRole.Font = Enum.Font.GothamBold
        ownerRole.TextSize = 14
        ownerRole.TextXAlignment = Enum.TextXAlignment.Left
        ownerRole.Parent = ownerCard

        local ownerDesc = Instance.new("TextLabel")
        ownerDesc.Text = "The mastermind behind this premium enhancement suite"
        ownerDesc.Size = UDim2.new(0, 300, 0, 20)
        ownerDesc.Position = UDim2.new(0, 120, 0, 75)
        ownerDesc.BackgroundTransparency = 1
        ownerDesc.TextColor3 = COLORS.MUTED
        ownerDesc.Font = Enum.Font.Gotham
        ownerDesc.TextSize = 12
        ownerDesc.TextXAlignment = Enum.TextXAlignment.Left
        ownerDesc.Parent = ownerCard

        -- Crown decoration
        local crown = Instance.new("TextLabel")
        crown.Text = "👑"
        crown.Size = UDim2.new(0, 30, 0, 30)
        crown.Position = UDim2.new(1, -40, 0, 10)
        crown.BackgroundTransparency = 1
        crown.TextColor3 = COLORS.WARNING
        crown.Font = Enum.Font.GothamBold
        crown.TextSize = 24
        crown.Parent = ownerCard
    end
end

-- Function to update users list for admin (only called if user is admin)
local function updateUsersList()
    if not currentUserIsAdmin then return end
    
    local usersList = secondSection:FindFirstChild("UsersList")
    if not usersList then return end
    
    for _, child in pairs(usersList:GetChildren()) do
        if child:IsA("Frame") then
            child:Destroy()
        end
    end

    local yPos = 10
    local scriptUserCount = 0
    
    -- Only show users who are connected to the script system
    for userId, userData in pairs(connectedUsers) do
        -- Skip current admin user
        if userId ~= tostring(player.UserId) then
            scriptUserCount = scriptUserCount + 1
            
            local userCard = Instance.new("Frame")
            userCard.Size = UDim2.new(1, -20, 0, 90)
            userCard.Position = UDim2.new(0, 10, 0, yPos)
            userCard.BackgroundColor3 = COLORS.BACKGROUND
            userCard.BorderSizePixel = 0
            userCard.Parent = usersList

            createCorner(12).Parent = userCard

            local userAva = Instance.new("ImageLabel")
            userAva.Size = UDim2.new(0, 50, 0, 50)
            userAva.Position = UDim2.new(0, 15, 0, 15)
            userAva.Image = "https://www.roblox.com/headshot-thumbnail/image?userId="..userId.."&width=150&height=150&format=png"
            userAva.BackgroundTransparency = 1
            userAva.Parent = userCard

            createCorner(8).Parent = userAva

            local userNameLabel = Instance.new("TextLabel")
            userNameLabel.Text = userData.name .. " (Script User)"
            userNameLabel.Size = UDim2.new(0, 250, 0, 25)
            userNameLabel.Position = UDim2.new(0, 80, 0, 15)
            userNameLabel.BackgroundTransparency = 1
            userNameLabel.TextColor3 = COLORS.TEXT
            userNameLabel.Font = Enum.Font.GothamBold
            userNameLabel.TextSize = 16
            userNameLabel.TextXAlignment = Enum.TextXAlignment.Left
            userNameLabel.Parent = userCard

            local statusLabel = Instance.new("TextLabel")
            statusLabel.Text = "Activity: " .. userData.status
            statusLabel.Size = UDim2.new(0, 250, 0, 20)
            statusLabel.Position = UDim2.new(0, 80, 0, 40)
            statusLabel.BackgroundTransparency = 1
            statusLabel.TextColor3 = userData.status == "Online" and COLORS.SUCCESS or COLORS.WARNING
            statusLabel.Font = Enum.Font.Gotham
            statusLabel.TextSize = 12
            statusLabel.TextXAlignment = Enum.TextXAlignment.Left
            statusLabel.Parent = userCard

            local timeLabel = Instance.new("TextLabel")
            timeLabel.Text = "Connected: " .. math.floor((tick() - userData.joinTime) / 60) .. "m ago"
            timeLabel.Size = UDim2.new(0, 250, 0, 15)
            timeLabel.Position = UDim2.new(0, 80, 0, 60)
            timeLabel.BackgroundTransparency = 1
            timeLabel.TextColor3 = COLORS.MUTED
            timeLabel.Font = Enum.Font.Gotham
            timeLabel.TextSize = 10
            timeLabel.TextXAlignment = Enum.TextXAlignment.Left
            timeLabel.Parent = userCard

            local kickBtn = createButton("KICK", UDim2.new(0, 70, 0, 30), UDim2.new(1, -150, 0, 10), COLORS.WARNING, userCard, 12)
            local banBtn = createButton("BAN", UDim2.new(0, 70, 0, 30), UDim2.new(1, -70, 0, 10), COLORS.DANGER, userCard, 12)

            kickBtn.MouseButton1Click:Connect(function()
                local success, userName = kickScriptUser(userId, "You have been kicked for script misuse")
                if success then
                    showNotification("Kicked script user: " .. userName, "success")
                else
                    showNotification("Failed to kick user: " .. userName, "error")
                end
                updateUsersList()
            end)

            banBtn.MouseButton1Click:Connect(function()
                local success, userName = kickScriptUser(userId, "You have been banned for script abuse")
                if success then
                    blacklistedUsers[userId] = true
                    showNotification("Banned script user: " .. userName, "success")
                else
                    showNotification("Failed to ban user", "error")
                end
                updateUsersList()
            end)

            yPos = yPos + 100
        end
    end

    -- Update title to show count
    local adminTitle = secondSection:FindFirstChild("TextLabel")
    if adminTitle then
        adminTitle.Text = "🔨 Script User Moderation (" .. scriptUserCount .. " users connected)"
    end
    
    -- Show message if no script users
    if scriptUserCount == 0 then
        local noUsersLabel = Instance.new("TextLabel")
        noUsersLabel.Name = "NoUsers"
        noUsersLabel.Text = "No other script users connected.\nOnly users actively using the script system appear here."
        noUsersLabel.Size = UDim2.new(1, -40, 0, 100)
        noUsersLabel.Position = UDim2.new(0, 20, 0, yPos)
        noUsersLabel.BackgroundTransparency = 1
        noUsersLabel.TextColor3 = COLORS.MUTED
        noUsersLabel.Font = Enum.Font.GothamSemibold
        noUsersLabel.TextSize = 16
        noUsersLabel.TextWrapped = true
        noUsersLabel.Parent = usersList
        yPos = yPos + 120
    end

    usersList.CanvasSize = UDim2.new(0, 0, 0, yPos + 20)
end

-- Tab switching functionality
generalTabBtn.MouseButton1Click:Connect(function()
    generalTabBtn.BackgroundColor3 = COLORS.PRIMARY
    secondTabBtn.BackgroundColor3 = COLORS.BACKGROUND
    generalContent.Visible = true
    secondContent.Visible = false
end)

secondTabBtn.MouseButton1Click:Connect(function()
    if currentUserIsAdmin then
        secondTabBtn.BackgroundColor3 = COLORS.DANGER
    else
        secondTabBtn.BackgroundColor3 = COLORS.ACCENT
    end
    generalTabBtn.BackgroundColor3 = COLORS.BACKGROUND
    generalContent.Visible = false
    secondContent.Visible = true
    
    -- Update users list if admin
    if currentUserIsAdmin then
        updateUsersList()
    end
end)

-- ===== EVENT HANDLERS =====

-- FIXED Login suggestion handlers
continueBtn.MouseButton1Click:Connect(function()
    local suggestedUsername = getLoginSuggestion()
    if suggestedUsername then
        local credentials = rememberedCredentials[player.UserId]
        if credentials and credentials.username == suggestedUsername and (tick() - credentials.timestamp) < 86400 then
            -- Check blacklist first
            if blacklistedUsers[tostring(player.UserId)] then
                showNotification("You have been blacklisted from using this script", "error")
                return
            end
            
            -- Check if account still exists and password matches
            if accounts[credentials.username] and accounts[credentials.username].password == credentials.password then
                -- Successful auto-login
                loginContainer.Visible = false
                
                -- Add to connected users
                connectedUsers[tostring(player.UserId)] = {
                    name = player.Name,
                    status = "Online",
                    joinTime = tick()
                }
                
                -- Show unified dashboard for both admin and regular users
                userDashboard.Visible = true
                setupSecondTab(accounts[credentials.username].isAdmin)
                
                if accounts[credentials.username].isAdmin then
                    showNotification("Welcome back Admin " .. credentials.username, "success")
                    dashTitle.Text = "⚡ ADMIN CONTROL PANEL"
                    dashHeader.BackgroundColor3 = COLORS.DANGER
                    dashHeaderFix.BackgroundColor3 = COLORS.DANGER
                    updateUsersList()
                else
                    showNotification("Welcome back " .. credentials.username, "success")
                    dashTitle.Text = "ZONANRA DASHBOARD"
                    dashHeader.BackgroundColor3 = COLORS.PANEL
                    dashHeaderFix.BackgroundColor3 = COLORS.PANEL
                end
                
                -- Set initial tab state
                generalTabBtn.BackgroundColor3 = COLORS.PRIMARY
                secondTabBtn.BackgroundColor3 = COLORS.BACKGROUND
                generalContent.Visible = true
                secondContent.Visible = false
                
            else
                showNotification("Session expired, please login manually", "error")
                -- Fall back to manual login with username filled
                usernameInput.Text = suggestedUsername
                suggestionSection.Visible = false
                tabContainer.Position = UDim2.new(0, 30, 0, 140)
                loginForm.Position = UDim2.new(0, 30, 0, 210)
                registerForm.Position = UDim2.new(0, 30, 0, 210)
                passwordInput:CaptureFocus()
            end
        else
            -- No valid stored credentials, fall back to manual login
            usernameInput.Text = suggestedUsername
            suggestionSection.Visible = false
            tabContainer.Position = UDim2.new(0, 30, 0, 140)
            loginForm.Position = UDim2.new(0, 30, 0, 210)
            registerForm.Position = UDim2.new(0, 30, 0, 210)
            passwordInput:CaptureFocus()
            showNotification("Enter your password to continue as " .. suggestedUsername, "info", 3)
        end
    else
        showNotification("No previous login found", "error")
    end
end)

newAccountBtn.MouseButton1Click:Connect(function()
    suggestionSection.Visible = false
    tabContainer.Position = UDim2.new(0, 30, 0, 140)
    loginForm.Position = UDim2.new(0, 30, 0, 210)
    registerForm.Position = UDim2.new(0, 30, 0, 210)
    signupTab.BackgroundColor3 = COLORS.PRIMARY
    loginTab.BackgroundColor3 = COLORS.PANEL
    loginForm.Visible = false
    registerForm.Visible = true
end)

-- Tab switching
loginTab.MouseButton1Click:Connect(function()
    loginTab.BackgroundColor3 = COLORS.PRIMARY
    signupTab.BackgroundColor3 = COLORS.PANEL
    loginForm.Visible = true
    registerForm.Visible = false
end)

signupTab.MouseButton1Click:Connect(function()
    signupTab.BackgroundColor3 = COLORS.PRIMARY
    loginTab.BackgroundColor3 = COLORS.PANEL
    loginForm.Visible = false
    registerForm.Visible = true
end)

-- FIXED Login functionality
loginBtn.MouseButton1Click:Connect(function()
    local username = usernameInput.Text:gsub("%s+", "")
    local password = getPassword()

    if username == "" or password == "" then
        showNotification("Please fill all fields", "error")
        return
    end

    if blacklistedUsers[tostring(player.UserId)] then
        showNotification("You have been blacklisted from using this script", "error")
        return
    end

    if accounts[username] and accounts[username].password == password then
        -- Save login for future suggestions
        saveLoginSuggestion(username, password)
        
        loginContainer.Visible = false

        -- Add to connected users
        connectedUsers[tostring(player.UserId)] = {
            name = player.Name,
            status = "Online",
            joinTime = tick()
        }

        -- Show unified dashboard for both admin and regular users
        userDashboard.Visible = true
        setupSecondTab(accounts[username].isAdmin)

        if accounts[username].isAdmin then
            showNotification("Welcome Admin " .. username, "success")
            dashTitle.Text = "⚡ ADMIN CONTROL PANEL"
            dashHeader.BackgroundColor3 = COLORS.DANGER
            dashHeaderFix.BackgroundColor3 = COLORS.DANGER
            updateUsersList()
        else
            showNotification("Welcome " .. username, "success")
            dashTitle.Text = "ZONANRA DASHBOARD"
            dashHeader.BackgroundColor3 = COLORS.PANEL
            dashHeaderFix.BackgroundColor3 = COLORS.PANEL
        end

        -- Set initial tab state
        generalTabBtn.BackgroundColor3 = COLORS.PRIMARY
        secondTabBtn.BackgroundColor3 = COLORS.BACKGROUND
        generalContent.Visible = true
        secondContent.Visible = false

    else
        showNotification("Invalid credentials", "error")
    end
end)

-- Register functionality
registerBtn.MouseButton1Click:Connect(function()
    local username = newUsernameInput.Text:gsub("%s+", "")
    local password = getNewPassword()
    local confirmPassword = getConfirmPassword()

    if username == "" or password == "" or confirmPassword == "" then
        showNotification("Please fill all fields", "error")
        return
    end

    if #username < 4 then
        showNotification("Username too short (min 4 chars)", "error")
        return
    end

    if #password < 6 then
        showNotification("Password too short (min 6 chars)", "error")
        return
    end

    if password ~= confirmPassword then
        showNotification("Passwords don't match", "error")
        return
    end

    if accounts[username] then
        showNotification("Username already taken", "error")
        return
    end

    accounts[username] = {password = password, isAdmin = false}
    showNotification("Account created successfully!", "success")

    task.delay(2, function()
        loginTab.BackgroundColor3 = COLORS.PRIMARY
        signupTab.BackgroundColor3 = COLORS.PANEL
        loginForm.Visible = true
        registerForm.Visible = false
        usernameInput.Text = username
    end)
end)

-- Enhanced logout functionality with suggestions
local function performLogout()
    -- Reset all states
    for key, _ in pairs(userStates) do
        userStates[key] = false
    end

    -- Reset character
    local character = player.Character
    if character then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = 16
            humanoid.JumpPower = 50
            humanoid.MaxHealth = 100
            humanoid.Health = 100
        end

        local rootPart = character:FindFirstChild("HumanoidRootPart")
        if rootPart then
            for _, obj in pairs(rootPart:GetChildren()) do
                if obj:IsA("BodyVelocity") then
                    obj:Destroy()
                end
            end
        end

        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                part.CanCollide = true
            end
        end
    end

    -- Remove from connected users
    connectedUsers[tostring(player.UserId)] = nil

    -- Show login screen with suggestions
    userDashboard.Visible = false
    loginContainer.Visible = true
    
    -- Clear inputs
    usernameInput.Text = ""
    passwordInput.Text = ""
    newUsernameInput.Text = ""
    newPasswordInput.Text = ""
    confirmPasswordInput.Text = ""
    
    -- Check for login suggestions
    local lastUsername = getLoginSuggestion()
    if lastUsername then
        suggestionSection.Visible = true
        suggestionText.Text = "Continue as " .. lastUsername .. " or create new account?"
        tabContainer.Position = UDim2.new(0, 30, 0, 240)
        loginForm.Position = UDim2.new(0, 30, 0, 310)
        registerForm.Position = UDim2.new(0, 30, 0, 310)
    else
        suggestionSection.Visible = false
        tabContainer.Position = UDim2.new(0, 30, 0, 140)
        loginForm.Position = UDim2.new(0, 30, 0, 210)
        registerForm.Position = UDim2.new(0, 30, 0, 210)
    end
    
    showNotification("Logged out successfully", "info")
end

-- Logout functionality
logoutBtn.MouseButton1Click:Connect(performLogout)
